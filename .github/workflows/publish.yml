name: Publish to npm

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required to push tags
      packages: write  # Required for npm publishing
      id-token: write  # Required for npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Install dependencies
        run: npm ci

      - name: Build the library
        run: npm run build -- --project=country-selector-library

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./projects/country-selector-library/package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Check if version exists on npm
        id: check_version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
          echo "Checking if version $CURRENT_VERSION exists on npm..."

          # Check if the version exists on npm
          if npm view ngx-country-selector@$CURRENT_VERSION version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "❌ Version $CURRENT_VERSION already exists on npm"

            # Get the latest version and suggest next version
            LATEST_VERSION=$(npm view ngx-country-selector version)
            echo "Latest version on npm: $LATEST_VERSION"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "✅ Version $CURRENT_VERSION does not exist on npm, proceeding with publish"
          fi

      - name: Stop if version exists
        if: steps.check_version.outputs.exists == 'true'
        run: |
          echo "❌ Cannot publish: Version ${{ steps.current_version.outputs.version }} already exists on npm"
          echo "Please update the version in projects/country-selector-library/package.json"
          echo "Current version: ${{ steps.current_version.outputs.version }}"
          LATEST_VERSION=$(npm view ngx-country-selector version)
          echo "Latest version on npm: $LATEST_VERSION"
          exit 1

      - name: Verify npm auth
        if: steps.check_version.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm -v
          node -v
          npm whoami

      - name: Copy additional files to dist
        if: steps.check_version.outputs.exists == 'false'
        run: |
          cp README.md dist/country-selector-library/
          cp LICENSE.txt dist/country-selector-library/

      - name: Show package info
        if: steps.check_version.outputs.exists == 'false'
        run: |
          echo "Publishing package info:"
          cd dist/country-selector-library
          cat package.json | jq '{name, version, repository}'
          echo "Package contents:"
          ls -la

      - name: Publish to npm
        if: steps.check_version.outputs.exists == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd dist/country-selector-library
          # Remove any problematic git references
          rm -rf .git 2>/dev/null || true
          npm publish --access public

      - name: Check if tag already exists
        if: steps.check_version.outputs.exists == 'false'
        id: check_tag
        run: |
          PUBLISHED_VERSION=$(node -p "require('./dist/country-selector-library/package.json').version")
          if git rev-parse "v$PUBLISHED_VERSION" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag v$PUBLISHED_VERSION already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag v$PUBLISHED_VERSION does not exist"
          fi

      - name: Create and push git tag
        if: steps.check_version.outputs.exists == 'false' && success() && steps.check_tag.outputs.exists == 'false'
        id: create_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PUBLISHED_VERSION=$(node -p "require('./dist/country-selector-library/package.json').version")
          echo "Creating and pushing tag v$PUBLISHED_VERSION"
          git tag "v$PUBLISHED_VERSION"
          git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/${{ github.repository }}.git
          git push origin "v$PUBLISHED_VERSION"
          echo "tag_name=v$PUBLISHED_VERSION" >> $GITHUB_OUTPUT

      - name: Generate release notes
        if: steps.check_version.outputs.exists == 'false' && success() && steps.check_tag.outputs.exists == 'false'
        id: release_notes
        run: |
          VERSION="${{ steps.current_version.outputs.version }}"
          echo "Generating release notes for version $VERSION"

          # Create release notes
          cat > release_notes.md << EOF
          ## 🚀 ngx-country-selector v$VERSION

          ### What's New
          - Updated Angular Country Selector component
          - Built with Angular 19.1.2
          - Published to npm: https://www.npmjs.com/package/ngx-country-selector

          ### Installation
          \`\`\`bash
          npm install ngx-country-selector@$VERSION
          \`\`\`

          ### Package Information
          - **Package Size**: $(du -sh dist/country-selector-library | cut -f1)
          - **Angular Version**: ^19.1.2
          - **Dependencies**: tslib ^2.3.0

          ### Links
          - 📦 [NPM Package](https://www.npmjs.com/package/ngx-country-selector)
          - 📚 [Documentation](https://github.com/${{ github.repository }}#readme)
          - 🐛 [Report Issues](https://github.com/${{ github.repository }}/issues)
          EOF

          echo "Release notes created"

      - name: Create package tarball
        if: steps.check_version.outputs.exists == 'false' && success()
        run: |
          cd dist/country-selector-library
          npm pack
          TARBALL_NAME=$(ls *.tgz)
          echo "tarball_name=$TARBALL_NAME" >> $GITHUB_ENV
          echo "Created tarball: $TARBALL_NAME"

      - name: Create GitHub Release
        if: steps.check_version.outputs.exists == 'false' && success() && steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          name: "🚀 ngx-country-selector v${{ steps.current_version.outputs.version }}"
          body_path: release_notes.md
          files: |
            dist/country-selector-library/*.tgz
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Setup Node.js for GitHub Packages
        if: steps.check_version.outputs.exists == 'false' && success()
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@evicio1'

      - name: Publish to GitHub Packages
        if: steps.check_version.outputs.exists == 'false' && success()
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd dist/country-selector-library

          # Update package.json for GitHub Packages
          jq '.name = "@evicio1/ngx-country-selector"' package.json > temp.json && mv temp.json package.json

          echo "Publishing to GitHub Packages..."
          npm publish --access public
